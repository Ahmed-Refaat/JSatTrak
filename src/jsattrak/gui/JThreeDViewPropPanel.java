/*
 * JThreeDViewPropPanel.java
 * =====================================================================
 * Copyright (C) 2008 Shawn E. Gano
 * 
 * This file is part of JSatTrak.
 * 
 * JSatTrak is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * JSatTrak is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with JSatTrak.  If not, see <http://www.gnu.org/licenses/>.
 * =====================================================================
 *
 * Created on October 23, 2007, 9:18 AM
 */

package jsattrak.gui;

import gov.nasa.worldwind.WorldWindow;
import gov.nasa.worldwind.geom.Angle;
import javax.swing.JDialog;
import jsattrak.utilities.J3DEarthComponent;

/**
 *
 * @author  sgano
 */
public class JThreeDViewPropPanel extends javax.swing.JPanel
{
    
    private boolean okHit = false; // if okay was hit
    
    JDialog iframe; // used to know what its parent frame is - to close window
    
    JSatTrak app; // used to force repaints
    
    J3DEarthComponent threeDPanel; // parent Panel
    WorldWindow wwd; // wwj object
    
    /** Creates new form JThreeDViewPropPanel */
    public JThreeDViewPropPanel()
    {
        initComponents();
    }
    
    public JThreeDViewPropPanel(JSatTrak app, J3DEarthComponent threeDPanel, WorldWindow wwd)
    {
        this.app = app;
        this.threeDPanel = threeDPanel;
        this.wwd = wwd;
        
//        //((OrbitView)wwd.getView()).setLatitude(Angle.fromDegrees(-45));
//        //System.out.println("Eye pos: lat: deg:" + ((OrbitView)wwd.getView()).getLatitude().getDegrees());
//        double viewPitch = ((OrbitView) wwd.getView()).getPitch().getDegrees();
//        double viewHeading = ((OrbitView) wwd.getView()).getHeading().getDegrees();
//        System.out.println("pitch:" + viewPitch + ", heading:" + viewHeading);
//        
//        //double viewLat = ((OrbitView) wwd.getView()).getLatitude().getDegrees();
//        double viewLat = ((OrbitView) wwd.getView()).getLookAtLatitude().getDegrees();
//        double viewLon = ((OrbitView) wwd.getView()).getLookAtLongitude().getDegrees();
//        double viewAlt = ((OrbitView) wwd.getView()).getAltitude();
//        System.out.println("lat:" + viewLat + "(" + ((OrbitView) wwd.getView()).getLatitude().getDegrees() + ")"+", lon:" + viewLon + ", alt:"+viewAlt);
        
        initComponents();
        
        //set inital settings
        // === Camera Properties =============
        Angle fov = wwd.getView().getFieldOfView();
        fovTextField.setText("" + fov.getDegrees() );
        
        if(threeDPanel.isViewModeECI())
        {
            eciRadioButton.setSelected(true);
            ecefRadioButton.setSelected(false);
        }
        else
        {
            ecefRadioButton.setSelected(true);
            eciRadioButton.setSelected(false);
        }
        
        
    } // JThreeDViewPropPanel
    
    public void setParentDialog(JDialog iframe)
    {
        this.iframe = iframe;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fovTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ecefRadioButton = new javax.swing.JRadioButton();
        eciRadioButton = new javax.swing.JRadioButton();
        applyButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jComboBox1 = new javax.swing.JComboBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Camera Properties"));

        jLabel1.setText("Field of View [deg]:");

        fovTextField.setText("0.0");
        fovTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fovTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Mode:");

        ecefRadioButton.setSelected(true);
        ecefRadioButton.setText("Earth Centered Earth Fixed");
        ecefRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ecefRadioButtonActionPerformed(evt);
            }
        });

        eciRadioButton.setText("Earth Centered Inertial");
        eciRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                eciRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fovTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eciRadioButton)
                            .addComponent(ecefRadioButton))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fovTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ecefRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eciRadioButton))
        );

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                applyButtonActionPerformed(evt);
            }
        });

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Camera Following"));

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Earth");

        jRadioButton2.setText("Object");
        jRadioButton2.setEnabled(false);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, 0, 130, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(applyButton)
                .addGap(33, 33, 33)
                .addComponent(okButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addGap(3, 3, 3))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyButton)
                    .addComponent(okButton)
                    .addComponent(cancelButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fovTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fovTextFieldActionPerformed
    {//GEN-HEADEREND:event_fovTextFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_fovTextFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        // close internal frame
        try
        {
            iframe.dispose(); // could setClosed(true)
        }
        catch(Exception e){}
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_applyButtonActionPerformed
    {//GEN-HEADEREND:event_applyButtonActionPerformed
        // save settings
        boolean updateMaps = saveSettings();
        
        // force repaint
        app.forceRepainting(updateMaps);
    }//GEN-LAST:event_applyButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
    {//GEN-HEADEREND:event_okButtonActionPerformed
        // save all settings back to satProp
         boolean updateMaps = saveSettings();
        
        
        // force repaint of 2D window
          // maybe do this from JSatTrack -- when internal frame is closed of this type and ok was hit?
        okHit = true;
        // force repaint
        app.forceRepainting(updateMaps);
        
        // close internal frame
        try
        {
            iframe.dispose(); // could setClosed(true)
        }
        catch(Exception e){}
        
    }//GEN-LAST:event_okButtonActionPerformed

    private void ecefRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ecefRadioButtonActionPerformed
    {//GEN-HEADEREND:event_ecefRadioButtonActionPerformed
        eciRadioButton.setSelected(false);
        ecefRadioButton.setSelected(true);
    }//GEN-LAST:event_ecefRadioButtonActionPerformed

    private void eciRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_eciRadioButtonActionPerformed
    {//GEN-HEADEREND:event_eciRadioButtonActionPerformed
        ecefRadioButton.setSelected(false);
        eciRadioButton.setSelected(true);    
    }//GEN-LAST:event_eciRadioButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton ecefRadioButton;
    private javax.swing.JRadioButton eciRadioButton;
    private javax.swing.JTextField fovTextField;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    
    
    private boolean saveSettings()
    {
        boolean updateMapData = false;
        
        // === Camera Properties =============
        try
        {
            double fov = Double.parseDouble(fovTextField.getText());
            wwd.getView().setFieldOfView(Angle.fromDegrees(fov));
        }
        catch(Exception e){}
        
        
        if(eciRadioButton.isSelected())
        {
            threeDPanel.setViewModeECI(true);
        }
        else
        {
             threeDPanel.setViewModeECI(false);
        }
        
        return updateMapData;
    } // saveSettings
}
