//this script should change dynamically based on user input
import javatester.OnlineInput;
//get user input
OnlineInput input = new OnlineInput("file:///C:/Documents%20and%20Settings/MMascaro/Desktop/Reduced%20Functionality%20Prototype/dist/parameters.html");
//basic program
jsattrak.closeScenario(false);
jsattrak.createNew2dWindow();
Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
jsattrak.setSize(750,dim.height);
int n = input.getSize();

//edit 2D window
twoDpanel = jsattrak.getTwoDWindowVec().firstElement(); // J2DEarthPanel
twoDpanel.setShowEarthLightsMask(true);


//generate 3D windows
threeDwindow1 = jsattrak.createNew3dWindow();
threeDwindow1.setTitle("3D Inertial View");
threeDwindow2 = jsattrak.createNew3dWindow();
threeDwindow2.setTitle("3D Fixed View");
threeDwindow2.setLocation(645,630);
threeDwindow2 = threeDwindow2.getContentPane();
threeDwindow2.setViewModeECI(false);



//setup locations/sizes of 3D window
int height3d = 350;
int width3d = 400;
threeDwindow1.setSize( new Dimension(width3d, height3d)); // width, height
int x= 235;
int y = 630;
threeDwindow1.setLocation(x,y); // shift down a ways


//generate satellites
for (int i = 0; i <n; i++)
{
	jsattrak.addCustomSat(input.getSatelliteName(i));
}
satHash = jsattrak.getSatHash();
r = new name.gano.file.StkEphemerisReader();
for (int i = 0; i <n; i++)
{	
	S = satHash.get(input.getSatelliteName(i));
	S.setGroundTrackIni2False();
	S.setPlot2DFootPrint(false);
	S.setShow3DFootprint(false);
	if (input.getColor(i).startsWith("b"))
	{
		S.setSatColor(Color.BLUE);
	}
	else if (input.getColor(i).startsWith("g"))
	{
		S.setSatColor(Color.GREEN);
	}
	else if (input.getColor(i).startsWith("r"))
	{
		S.setSatColor(Color.RED);
	}
	else if (input.getColor(i).startsWith("y"))
	{
		S.setSatColor(Color.YELLOW);
	}
	else if (input.getColor(i).startsWith("w"))
	{
		S.setSatColor(Color.WHITE);
	}
	else if (input.getColor(i).startsWith("p"))
	{
		S.setSatColor(Color.PINK);
	}
	else if (input.getColor(i).startsWith("o"))
	{
		S.setSatColor(Color.ORANGE);
	}
	vector = r.readStkEphemeris(input.getEphemerisLocation(i));
	S.setEphemeris(vector);
	// set default 3d model and turn on the use of 3d models
	S.setThreeDModelPath("globalstar/Globalstar.3ds");
	S.setUse3dModel(true);
	if (input.getModelCentered(i))
	{
		threeDview = jsattrak.createNew3dWindow();
		threeDview = threeDview.getContentPane();  // an odd, but simple way to grab the 3D scene object
		threeDview.setModelViewString(input.getSatelliteName(i));
		threeDview.setModelViewMode(true);
		threeDview.setSize(new Dimension(width3d, height3d));
		threeDview.setLocation(400,400);
	}
	else
	{
		//dont do anything!
	}

}
double scenarioTime = vector.firstElement().state[0];
jsattrak.setTime(scenarioTime);